{
  "contractName": "InterestEarnedAccount",
  "latestAbiHash": "72a73972d565bb24463e7368fd263af4",
  "2282749a57fa5c7d61cf33b2f04daf2b": {
    "latestDeployedAddress": "0xbbecff5db2f9cccc936895121802fc15053344c6",
    "deployments": {
      "0x80d62c62138ed74699008c6f041b589c51619145": {
        "generatedAt": "2018-04-24T15:43:19.837Z",
        "truffleContractFileUpdatedAt": "2018-02-14T23:28:03.467Z",
        "compiler": {
          "name": "solc",
          "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
        },
        "bytecodeHash": "10f2c7bcc89c991f8036cd653a9c9254",
        "deployedBytecodeHash": "6d1f7692b0b3214dce6de23ef79d0567",
        "sourceHash": "a08b32cfe73754d798c1e9a2f2d69bcb",
        "source": "/* Contract to hold earned interest from loans repaid\n   premiums for locks are being accrued (i.e. transferred) to Locker */\n\npragma solidity 0.4.19;\nimport \"./generic/SystemAccount.sol\";\nimport \"./interfaces/AugmintTokenInterface.sol\";\n\n\ncontract InterestEarnedAccount is SystemAccount {\n\n    function transferInterest(AugmintTokenInterface augmintToken, address locker, uint interestAmount)\n    external restrict(\"MonetarySupervisorContract\") {\n        augmintToken.transfer(locker, interestAmount);\n    }\n\n}\n"
      },
      "0xbbecff5db2f9cccc936895121802fc15053344c6": {
        "generatedAt": "2018-04-24T15:44:28.408Z",
        "truffleContractFileUpdatedAt": "2018-02-27T07:31:58.109Z",
        "compiler": {
          "name": "solc",
          "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
        },
        "bytecodeHash": "fa7e41b12921f5486139b113e27d9f42",
        "deployedBytecodeHash": "3b0ffecb49e2308162baea06ab012022",
        "sourceHash": "a08b32cfe73754d798c1e9a2f2d69bcb",
        "source": "/* Contract to hold earned interest from loans repaid\n   premiums for locks are being accrued (i.e. transferred) to Locker */\n\npragma solidity 0.4.19;\nimport \"./generic/SystemAccount.sol\";\nimport \"./interfaces/AugmintTokenInterface.sol\";\n\n\ncontract InterestEarnedAccount is SystemAccount {\n\n    function transferInterest(AugmintTokenInterface augmintToken, address locker, uint interestAmount)\n    external restrict(\"MonetarySupervisorContract\") {\n        augmintToken.transfer(locker, interestAmount);\n    }\n\n}\n"
      }
    }
  },
  "72a73972d565bb24463e7368fd263af4": {
    "latestDeployedAddress": "0xbbecff5db2f9cccc936895121802fc15053344c6",
    "deployments": {
      "0xbbecff5db2f9cccc936895121802fc15053344c6": {
        "generatedAt": "2018-04-24T15:49:38.663Z",
        "truffleContractFileUpdatedAt": "2018-04-20T18:14:08.859Z",
        "deployTransactionHash": "0x5a5a87ca23ed706c3c81c5c5655c57ca2d21ac35582e1bb5ef1bf03f1793936b",
        "compiler": {
          "name": "solc",
          "version": "0.4.23+commit.124ca40d.Emscripten.clang"
        },
        "bytecodeHash": "e12b38103657a4ae2a9c1fad1bbe7498",
        "deployedBytecodeHash": "47b56a5ab267ee1bc0e0b0d050080a29",
        "sourceHash": "080bdccd163b74b49fb908b443c45199",
        "source": "/* Contract to hold earned interest from loans repaid\n   premiums for locks are being accrued (i.e. transferred) to Locker */\n\npragma solidity ^0.4.23;\nimport \"./generic/SystemAccount.sol\";\nimport \"./interfaces/AugmintTokenInterface.sol\";\n\n\ncontract InterestEarnedAccount is SystemAccount {\n\n    function transferInterest(AugmintTokenInterface augmintToken, address locker, uint interestAmount)\n    external restrict(\"MonetarySupervisorContract\") {\n        augmintToken.transfer(locker, interestAmount);\n    }\n\n}\n"
      }
    }
  }
}