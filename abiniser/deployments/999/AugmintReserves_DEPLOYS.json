{
  "contractName": "AugmintReserves",
  "latestAbiHash": "33995f203f6c629e9916d82dd78e875f",
  "dfbca9f4d0da7a3517b2832dc1c04d9a": {
    "latestDeployedAddress": "0xb0a2a8e846b66c7384f52635cecef5280f766c8b",
    "deployments": {
      "0xb0a2a8e846b66c7384f52635cecef5280f766c8b": {
        "generatedAt": "2018-04-24T15:43:19.781Z",
        "truffleContractFileUpdatedAt": "2018-02-14T23:23:03.215Z",
        "compiler": {
          "name": "solc",
          "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
        },
        "bytecodeHash": "a437bda1eb8e4840c187e6bfcaf70e85",
        "deployedBytecodeHash": "dbedf5fee478ed0af1ad2a1a5b7576e8",
        "sourceHash": "74ed728bb0a86f1bfb854c62b2c39633",
        "source": "/* Contract to hold Augmint reserves (ETH & Token)\n    - ETH as regular ETH balance of the contract\n    - ERC20 token reserve (stored as regular Token balance under the contract address)\n\nNB: reserves are held under the contract address, therefore any transaction on the reserve is limited to the\n    tx-s defined here (i.e. transfer is not allowed even by the contract owner or MonetaryBoard or MonetarySupervisor)\n\n */\n\npragma solidity 0.4.19;\nimport \"./generic/SystemAccount.sol\";\nimport \"./interfaces/AugmintTokenInterface.sol\";\n\n\ncontract AugmintReserves is SystemAccount {\n\n    function () public payable { // solhint-disable-line no-empty-blocks\n        // to accept ETH sent into reserve (from defaulted loan's collateral )\n    }\n\n    function burn(AugmintTokenInterface augmintToken, uint amount) external restrict(\"MonetarySupervisorContract\") {\n        augmintToken.burn(amount);\n    }\n\n}\n"
      }
    }
  },
  "33995f203f6c629e9916d82dd78e875f": {
    "latestDeployedAddress": "0x56ad79460db45ac29cb672b1914e30c5ffa4e38e",
    "deployments": {
      "0x56ad79460db45ac29cb672b1914e30c5ffa4e38e": {
        "generatedAt": "2018-04-24T15:49:38.615Z",
        "truffleContractFileUpdatedAt": "2018-04-20T18:14:08.862Z",
        "deployTransactionHash": "0x2b5a21c00e08fbe47e506c13e03be07d96bbe4834966a0c3c0e7d68f6d5849ca",
        "compiler": {
          "name": "solc",
          "version": "0.4.23+commit.124ca40d.Emscripten.clang"
        },
        "bytecodeHash": "7a5b30598800cdd29ccd600d1342b26a",
        "deployedBytecodeHash": "c64995bfa42dc887ffeaf649da038f6e",
        "sourceHash": "c3fd200d4510ea1b3d7c6c7ae04683b9",
        "source": "/* Contract to hold Augmint reserves (ETH & Token)\n    - ETH as regular ETH balance of the contract\n    - ERC20 token reserve (stored as regular Token balance under the contract address)\n\nNB: reserves are held under the contract address, therefore any transaction on the reserve is limited to the\n    tx-s defined here (i.e. transfer is not allowed even by the contract owner or MonetaryBoard or MonetarySupervisor)\n\n */\n\npragma solidity ^0.4.23;\nimport \"./generic/SystemAccount.sol\";\nimport \"./interfaces/AugmintTokenInterface.sol\";\n\n\ncontract AugmintReserves is SystemAccount {\n\n    function () public payable { // solhint-disable-line no-empty-blocks\n        // to accept ETH sent into reserve (from defaulted loan's collateral )\n    }\n\n    function burn(AugmintTokenInterface augmintToken, uint amount) external restrict(\"MonetarySupervisorContract\") {\n        augmintToken.burn(amount);\n    }\n\n}\n"
      }
    }
  }
}